{"id":"backjoon/1271.js","dependencies":[{"name":"/Volumes/G/coding/Algorithm/package.json","includedInParent":true,"mtime":1627195333160},{"name":"readline","loc":{"line":1,"column":19},"parent":"/Volumes/G/coding/Algorithm/backjoon/1271.js","resolved":"/Volumes/G/coding/Algorithm/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"process","parent":"/Volumes/G/coding/Algorithm/backjoon/1271.js","resolved":"/Volumes/G/coding/Algorithm/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar rl = require('readline').createInterface(process.stdin, process.stdout);\n\nvar input = [];\nrl.on('line', function (line) {\n  input = line.split(' ').map(function (x) {\n    return BigInt(x);\n  });\n}).on('close', function () {\n  var _input = input,\n      _input2 = _slicedToArray(_input, 2),\n      n = _input2[0],\n      m = _input2[1];\n\n  var answer = '' + n / m + '\\n';\n  answer += n % m;\n  console.log(answer);\n});"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":14,"column":0},"source":"backjoon/1271.js","original":{"line":1,"column":0}},{"name":"rl","generated":{"line":14,"column":4},"source":"backjoon/1271.js","original":{"line":1,"column":6}},{"generated":{"line":14,"column":6},"source":"backjoon/1271.js","original":{"line":1,"column":8}},{"name":"require","generated":{"line":14,"column":9},"source":"backjoon/1271.js","original":{"line":1,"column":11}},{"generated":{"line":14,"column":16},"source":"backjoon/1271.js","original":{"line":1,"column":18}},{"generated":{"line":14,"column":17},"source":"backjoon/1271.js","original":{"line":1,"column":19}},{"generated":{"line":14,"column":27},"source":"backjoon/1271.js","original":{"line":1,"column":18}},{"generated":{"line":14,"column":28},"source":"backjoon/1271.js","original":{"line":1,"column":11}},{"name":"createInterface","generated":{"line":14,"column":29},"source":"backjoon/1271.js","original":{"line":1,"column":31}},{"generated":{"line":14,"column":44},"source":"backjoon/1271.js","original":{"line":1,"column":11}},{"name":"process","generated":{"line":14,"column":45},"source":"backjoon/1271.js","original":{"line":1,"column":47}},{"generated":{"line":14,"column":52},"source":"backjoon/1271.js","original":{"line":1,"column":54}},{"name":"stdin","generated":{"line":14,"column":53},"source":"backjoon/1271.js","original":{"line":1,"column":55}},{"generated":{"line":14,"column":58},"source":"backjoon/1271.js","original":{"line":1,"column":11}},{"name":"process","generated":{"line":14,"column":60},"source":"backjoon/1271.js","original":{"line":1,"column":62}},{"generated":{"line":14,"column":67},"source":"backjoon/1271.js","original":{"line":1,"column":69}},{"name":"stdout","generated":{"line":14,"column":68},"source":"backjoon/1271.js","original":{"line":1,"column":70}},{"generated":{"line":14,"column":74},"source":"backjoon/1271.js","original":{"line":1,"column":11}},{"generated":{"line":14,"column":75},"source":"backjoon/1271.js","original":{"line":1,"column":0}},{"generated":{"line":16,"column":0},"source":"backjoon/1271.js","original":{"line":3,"column":0}},{"name":"input","generated":{"line":16,"column":4},"source":"backjoon/1271.js","original":{"line":3,"column":4}},{"generated":{"line":16,"column":9},"source":"backjoon/1271.js","original":{"line":3,"column":9}},{"generated":{"line":16,"column":12},"source":"backjoon/1271.js","original":{"line":3,"column":12}},{"generated":{"line":16,"column":14},"source":"backjoon/1271.js","original":{"line":3,"column":0}},{"name":"rl","generated":{"line":17,"column":0},"source":"backjoon/1271.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":2},"source":"backjoon/1271.js","original":{"line":5,"column":2}},{"name":"on","generated":{"line":17,"column":3},"source":"backjoon/1271.js","original":{"line":5,"column":3}},{"generated":{"line":17,"column":5},"source":"backjoon/1271.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":6},"source":"backjoon/1271.js","original":{"line":5,"column":6}},{"generated":{"line":17,"column":12},"source":"backjoon/1271.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":14},"source":"backjoon/1271.js","original":{"line":5,"column":14}},{"name":"line","generated":{"line":17,"column":24},"source":"backjoon/1271.js","original":{"line":5,"column":15}},{"generated":{"line":17,"column":28},"source":"backjoon/1271.js","original":{"line":5,"column":14}},{"generated":{"line":17,"column":30},"source":"backjoon/1271.js","original":{"line":5,"column":24}},{"name":"input","generated":{"line":18,"column":0},"source":"backjoon/1271.js","original":{"line":6,"column":2}},{"name":"input","generated":{"line":18,"column":2},"source":"backjoon/1271.js","original":{"line":6,"column":2}},{"generated":{"line":18,"column":7},"source":"backjoon/1271.js","original":{"line":6,"column":7}},{"name":"line","generated":{"line":18,"column":10},"source":"backjoon/1271.js","original":{"line":6,"column":10}},{"generated":{"line":18,"column":14},"source":"backjoon/1271.js","original":{"line":6,"column":14}},{"name":"split","generated":{"line":18,"column":15},"source":"backjoon/1271.js","original":{"line":6,"column":15}},{"generated":{"line":18,"column":20},"source":"backjoon/1271.js","original":{"line":6,"column":10}},{"generated":{"line":18,"column":21},"source":"backjoon/1271.js","original":{"line":6,"column":21}},{"generated":{"line":18,"column":24},"source":"backjoon/1271.js","original":{"line":6,"column":10}},{"name":"map","generated":{"line":18,"column":26},"source":"backjoon/1271.js","original":{"line":6,"column":26}},{"generated":{"line":18,"column":29},"source":"backjoon/1271.js","original":{"line":6,"column":10}},{"generated":{"line":18,"column":30},"source":"backjoon/1271.js","original":{"line":6,"column":30}},{"name":"x","generated":{"line":18,"column":40},"source":"backjoon/1271.js","original":{"line":6,"column":31}},{"generated":{"line":18,"column":41},"source":"backjoon/1271.js","original":{"line":6,"column":30}},{"generated":{"line":19,"column":0},"source":"backjoon/1271.js","original":{"line":6,"column":30}},{"name":"BigInt","generated":{"line":19,"column":11},"source":"backjoon/1271.js","original":{"line":6,"column":37}},{"generated":{"line":19,"column":17},"source":"backjoon/1271.js","original":{"line":6,"column":43}},{"name":"x","generated":{"line":19,"column":18},"source":"backjoon/1271.js","original":{"line":6,"column":44}},{"generated":{"line":19,"column":19},"source":"backjoon/1271.js","original":{"line":6,"column":43}},{"generated":{"line":19,"column":20},"source":"backjoon/1271.js","original":{"line":6,"column":30}},{"generated":{"line":20,"column":0},"source":"backjoon/1271.js","original":{"line":6,"column":30}},{"generated":{"line":20,"column":3},"source":"backjoon/1271.js","original":{"line":6,"column":10}},{"generated":{"line":20,"column":4},"source":"backjoon/1271.js","original":{"line":6,"column":2}},{"generated":{"line":21,"column":0},"source":"backjoon/1271.js","original":{"line":7,"column":1}},{"generated":{"line":21,"column":1},"source":"backjoon/1271.js","original":{"line":5,"column":0}},{"name":"on","generated":{"line":21,"column":3},"source":"backjoon/1271.js","original":{"line":7,"column":3}},{"generated":{"line":21,"column":5},"source":"backjoon/1271.js","original":{"line":5,"column":0}},{"generated":{"line":21,"column":6},"source":"backjoon/1271.js","original":{"line":7,"column":6}},{"generated":{"line":21,"column":13},"source":"backjoon/1271.js","original":{"line":5,"column":0}},{"generated":{"line":21,"column":15},"source":"backjoon/1271.js","original":{"line":7,"column":15}},{"generated":{"line":21,"column":27},"source":"backjoon/1271.js","original":{"line":7,"column":21}},{"generated":{"line":22,"column":0},"source":"backjoon/1271.js","original":{"line":8,"column":2}},{"name":"input","generated":{"line":22,"column":15},"source":"backjoon/1271.js","original":{"line":8,"column":17}},{"generated":{"line":22,"column":20},"source":"backjoon/1271.js","original":{"line":8,"column":2}},{"generated":{"line":23,"column":0},"source":"backjoon/1271.js","original":{"line":8,"column":2}},{"generated":{"line":24,"column":0},"source":"backjoon/1271.js","original":{"line":8,"column":2}},{"name":"n","generated":{"line":24,"column":6},"source":"backjoon/1271.js","original":{"line":8,"column":9}},{"generated":{"line":24,"column":7},"source":"backjoon/1271.js","original":{"line":8,"column":2}},{"generated":{"line":25,"column":0},"source":"backjoon/1271.js","original":{"line":8,"column":2}},{"name":"m","generated":{"line":25,"column":6},"source":"backjoon/1271.js","original":{"line":8,"column":12}},{"generated":{"line":25,"column":7},"source":"backjoon/1271.js","original":{"line":8,"column":2}},{"generated":{"line":27,"column":0},"source":"backjoon/1271.js","original":{"line":9,"column":2}},{"name":"answer","generated":{"line":27,"column":6},"source":"backjoon/1271.js","original":{"line":9,"column":6}},{"generated":{"line":27,"column":12},"source":"backjoon/1271.js","original":{"line":9,"column":12}},{"generated":{"line":27,"column":15},"source":"backjoon/1271.js","original":{"line":9,"column":15}},{"name":"n","generated":{"line":27,"column":20},"source":"backjoon/1271.js","original":{"line":9,"column":20}},{"generated":{"line":27,"column":21},"source":"backjoon/1271.js","original":{"line":9,"column":21}},{"name":"m","generated":{"line":27,"column":24},"source":"backjoon/1271.js","original":{"line":9,"column":24}},{"generated":{"line":27,"column":25},"source":"backjoon/1271.js","original":{"line":9,"column":15}},{"generated":{"line":27,"column":28},"source":"backjoon/1271.js","original":{"line":9,"column":28}},{"generated":{"line":27,"column":32},"source":"backjoon/1271.js","original":{"line":9,"column":2}},{"name":"answer","generated":{"line":28,"column":0},"source":"backjoon/1271.js","original":{"line":10,"column":2}},{"name":"answer","generated":{"line":28,"column":2},"source":"backjoon/1271.js","original":{"line":10,"column":2}},{"generated":{"line":28,"column":8},"source":"backjoon/1271.js","original":{"line":10,"column":8}},{"name":"n","generated":{"line":28,"column":12},"source":"backjoon/1271.js","original":{"line":10,"column":12}},{"generated":{"line":28,"column":13},"source":"backjoon/1271.js","original":{"line":10,"column":13}},{"name":"m","generated":{"line":28,"column":16},"source":"backjoon/1271.js","original":{"line":10,"column":16}},{"generated":{"line":28,"column":17},"source":"backjoon/1271.js","original":{"line":10,"column":2}},{"name":"console","generated":{"line":29,"column":0},"source":"backjoon/1271.js","original":{"line":12,"column":2}},{"name":"console","generated":{"line":29,"column":2},"source":"backjoon/1271.js","original":{"line":12,"column":2}},{"generated":{"line":29,"column":9},"source":"backjoon/1271.js","original":{"line":12,"column":9}},{"name":"log","generated":{"line":29,"column":10},"source":"backjoon/1271.js","original":{"line":12,"column":10}},{"generated":{"line":29,"column":13},"source":"backjoon/1271.js","original":{"line":12,"column":2}},{"name":"answer","generated":{"line":29,"column":14},"source":"backjoon/1271.js","original":{"line":12,"column":14}},{"generated":{"line":29,"column":20},"source":"backjoon/1271.js","original":{"line":12,"column":2}},{"generated":{"line":30,"column":0},"source":"backjoon/1271.js","original":{"line":13,"column":1}},{"generated":{"line":30,"column":1},"source":"backjoon/1271.js","original":{"line":5,"column":0}}],"sources":{"backjoon/1271.js":"const rl = require('readline').createInterface(process.stdin, process.stdout);\n\nlet input = [];\n\nrl.on('line', (line) => {\n  input = line.split(' ').map((x) => BigInt(x));\n}).on('close', () => {\n  const [n, m] = input;\n  let answer = '' + n / m + '\\n';\n  answer += n % m;\n\n  console.log(answer);\n});"},"lineCount":null}},"error":null,"hash":"a02d453d3a72619a63710de4cabd1341","cacheData":{"env":{}}}